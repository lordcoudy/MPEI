Вариант 2. Разработать шаблон автоматного компонента с 3 входами и 2 выходами, 
выполняющего следующую задачу. 
В рамках одного сеанса компонент считывает последовательность из N блоков 
данных, поступающих на информационные входы  X1 и X2, и выдает на выход Y1 
положительные числа с их номерами, на выход Y2 отрицательные числа с их 
номерами.
Приоритет обслуживания входов Х1, Х2 – кольцевой: при отсутствии данных на 
приоритетном информационном входе текущий приоритет передается следующему по 
номеру (кольцевому) входу. В начальный момент наибольшим приоритетом обладает 
вход Х2.
В начальный момент, в первом сеансе N задано: N=10. Затем количество данных N, 
обрабатываемых за один сеанс, считывается с управляющего входа Х3. Если после 
завершения очередного сеанса на входе X3 нет новых данных, то очередной сеанс 
повторяется со старым значением N. 
Нарисовать диаграмму переходов и представить текстовое описание шаблона при 
заданных рабочих ситуациях на входах компонента в начальном состоянии S0:
State S0: U1={100}; U2={1*1}.



В начальный момент наибольшим приоритетом обладает 
вход Х2.

в S0 N задано: N=10


f0 = считываю x1, i = 1, вывод на выходы по условию

f1 = считываю x1, i++, вывод на выходы по условию

f2 = считываю x2, i++, вывод на выходы по условию

f3 = считываю x3, N = x3, i = 1, nextState = S1

f4 = беру N из памяти, i = 1, nextState = S1

f5 = не считываю x3 (оно в буфере висит, ждёт следующего прочтения не из состояния S0), но N = 10, считываю x1, i = 1

f6 = считываю x2, (x1 уже есть) вывод на выходы по условию (i++ после x2, i++ после x1), nextState = S1

f7 = x1 уже есть, вывод на выходы по условию, i++, nextState = S1